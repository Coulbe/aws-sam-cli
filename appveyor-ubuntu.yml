version: 1.0.{build}
image:
  - Ubuntu

configuration:
  - Worker0
  - Worker1
  - Worker2
  - Worker3
  - Worker4
  - Worker5
  - Worker6
  - Worker7
  - Worker8
  - Worker9

environment:
  AWS_DEFAULT_REGION: us-east-1
  SAM_CLI_DEV: 1
  WORKER_COUNT: 10

  matrix:
    - PYTHON_HOME: "C:\\Python37-x64"
      PYTHON_VERSION: "3.7"
      PYTHON_ARCH: "64"
      RUN_SMOKE: 1
      NOSE_PARAMETERIZED_NO_WARN: 1
      INSTALL_PY_38_PIP: 1
      INSTALL_PY_39_PIP: 1
      AWS_S3: "AWS_S3_37"
      AWS_ECR: "AWS_ECR_37"
      APPVEYOR_CONSOLE_DISABLE_PTY: true

    - PYTHON_HOME: "C:\\Python38-x64"
      PYTHON_VERSION: "3.8"
      PYTHON_ARCH: "64"
      RUN_SMOKE: 1
      NOSE_PARAMETERIZED_NO_WARN: 1
      INSTALL_PY_37_PIP: 1
      INSTALL_PY_39_PIP: 1
      AWS_S3: "AWS_S3_38"
      AWS_ECR: "AWS_ECR_38"
      APPVEYOR_CONSOLE_DISABLE_PTY: true

    - PYTHON_HOME: "C:\\Python39-x64"
      PYTHON_VERSION: "3.9"
      PYTHON_ARCH: "64"
      RUN_SMOKE: 1
      NOSE_PARAMETERIZED_NO_WARN: 1
      INSTALL_PY_37_PIP: 1
      INSTALL_PY_38_PIP: 1
      AWS_S3: "AWS_S3_39"
      AWS_ECR: "AWS_ECR_39"
      APPVEYOR_CONSOLE_DISABLE_PTY: true

install:
  # apt repo for python3.9 installation
  - sh: "sudo add-apt-repository ppa:deadsnakes/ppa"
  # AppVeyor's apt-get cache might be outdated, and the package could potentially be 404.
  - sh: "sudo apt-get update"

  - sh: "gvm use go1.13"
  - sh: "echo $PATH"
  - sh: "ls /usr/"
  - sh: "JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64"
  - sh: "PATH=$JAVA_HOME/bin:$PATH"
  - sh: "source ${HOME}/venv${PYTHON_VERSION}/bin/activate"
  - sh: "rvm use 2.7.2"
  - sh: "docker --version"

  # Install latest gradle
  - sh: "sudo apt-get -y remove gradle"
  - sh: "wget https://services.gradle.org/distributions/gradle-5.5-bin.zip -P /tmp"
  - sh: "sudo unzip -d /opt/gradle /tmp/gradle-*.zip"
  - sh: "PATH=/opt/gradle/gradle-5.5/bin:$PATH"

  # Install AWS CLI
  - sh: "virtualenv aws_cli"
  - sh: "./aws_cli/bin/python -m pip install awscli"
  - sh: "PATH=$(echo $PWD'/aws_cli/bin'):$PATH"

  - sh: "sudo apt-get -y install python2.7"
  - sh: "sudo apt-get -y install python3.7"
  - sh: "sudo apt-get -y install python3.8"
  - sh: "sudo apt-get -y install python3.9"

  - sh: "which python3.8"
  - sh: "which python3.7"
  - sh: "which python3.9"
  - sh: "which python2.7"

  - sh: "PATH=$PATH:/usr/bin/python3.9:/usr/bin/python3.8:/usr/bin/python3.7"
  - sh: "curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py"

  - sh: "sudo apt-get -y install python3-distutils"
  - sh: "sudo apt-get -y install python3.9-distutils"
  - ps: "If ($env:INSTALL_PY_39_PIP) {python3.9 get-pip.py --user}"
  - ps: "If ($env:INSTALL_PY_38_PIP) {python3.8 get-pip.py --user}"
  - ps: "If ($env:INSTALL_PY_37_PIP) {python3.7 get-pip.py --user}"

  # required for RIE with arm64 in linux
  - sh: "docker run --rm --privileged multiarch/qemu-user-static --reset -p yes"

  # update ca-certificates which causes failures with newest golang library
  - sh: "sudo apt-get install --reinstall ca-certificates"

build_script:
  - 'python -c "import sys; print(sys.executable)"'

for:
  - matrix:
      only:
        - configuration: Worker0
    before_test:
      - sh: 'export WORKER_ID="0"'
  - matrix:
      only:
        - configuration: Worker1
    before_test:
      - sh: 'export WORKER_ID="1"'
  - matrix:
      only:
        - configuration: Worker2
    before_test:
      - sh: 'export WORKER_ID="2"'
  - matrix:
      only:
        - configuration: Worker3
    before_test:
      - sh: 'export WORKER_ID="3"'
  - matrix:
      only:
        - configuration: Worker4
    before_test:
      - sh: 'export WORKER_ID="4"'
  - matrix:
      only:
        - configuration: Worker5
    before_test:
      - sh: 'export WORKER_ID="5"'
  - matrix:
      only:
        - configuration: Worker6
    before_test:
      - sh: 'export WORKER_ID="6"'
  - matrix:
      only:
        - configuration: Worker7
    before_test:
      - sh: 'export WORKER_ID="7"'
  - matrix:
      only:
        - configuration: Worker8
    before_test:
      - sh: 'export WORKER_ID="8"'
  - matrix:
      only:
        - configuration: Worker9
    before_test:
      - sh: 'export WORKER_ID="9"'

test_script:
  # Pre-dev Tests
  - 'pip install -e ".[pre-dev]"'
  - 'pip install -e ".[dev]"'
  - sh: "pytest -vv tests/unit"
